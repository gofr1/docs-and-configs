--[[
# Conky 1.12.2
# Author: gofr1
# Release date: 25 June 2021
# Tested on: Ubuntu 20.04.2 LTS - XFCE
# Feel free to modity this script
]]

conky.config ={
  -- CONKY SETTINGS
  background = true,
  update_interval = 2,
  total_run_times = 0,
  
  cpu_avg_samples = 2,
  net_avg_samples = 2,
  
  override_utf8_locale = true,
  
  double_buffer = true,
  no_buffers = true,
  
  text_buffer_size = 32768,
  
  -- CONKY: WINDOW SPECIFICATIONS
  own_window = true,
  own_window_argb_value = 8,
  own_window_argb_visual = true,
  own_window_class = 'conky-semi',
  own_window_colour = '000000',
  own_window_hints = 'undecorated,below,sticky,skip_taskbar,skip_pager',
  own_window_transparent = true,
  own_window_type = 'desktop',

  border_inner_margin = 5,
  border_width = 5, 

  minimum_height = 620,

  minimum_width = 320,
  maximum_width = 320,

  alignment = 'middle_right',
  gap_x = 20,
  gap_y = 0,

  -- GRAPHICS SETTINGS
  draw_shades = true,
  draw_outline = true,
  draw_borders = false,
  draw_graph_borders = true,

  -- TEXT SETTINGS
  use_xft = true,
  font = 'Open Sans:size=10:Regular',
  xftalpha = 0.2,
  uppercase = false,

  -- Pad percentages to this many decimals (0 = no padding)
  pad_percents = 1,

  -- COLOUR SETTINGS
  default_color = 'FFFAFA',
  default_shade_color = '0A0A0A',
  default_outline_color = '0A0A0A',

};

conky.text = [[
#${voffset -50}
#${alignr}${font Roboto Mono:size=60:Medium}${time %H:%M}
#${voffset -170}
#${font Roboto Mono:size=36:Medium}${alignr}${time %A}
#${voffset -105}
#${font Roboto Mono:size=14:Medium}${alignr}${time %e %B %Y}
#${voffset -45}
${font}
${alignr}${exec DISTRO=$(cat /etc/lsb-release | grep DISTRIB_DESCRIPTION | sed 's/DISTRIB_DESCRIPTION=//' | sed 's/"//g') ; echo $DISTRO}  $machine <- os
${alignr}${kernel} <- kernel
${alignr}${uptime_short} <- uptime
${alignr}${exec BASHVERSION=$(bash --version | grep "GNU bash" | awk '{print $4}') ; echo $BASHVERSION} <- shell
${voffset -20}
${hr 1}
${voffset -20}
${alignr}${mem} / ${memmax} <- memory
${alignr}${membar 10,150} <- usage
${alignr}process       cpu    mem
${alignr}${top_mem name 1} ${top_mem cpu 1} ${top_mem mem 1}
${alignr}${top_mem name 2} ${top_mem cpu 2} ${top_mem mem 2}
${alignr}${top_mem name 3} ${top_mem cpu 3} ${top_mem mem 3}
${alignr}${top_mem name 4} ${top_mem cpu 4} ${top_mem mem 4}
${voffset -20}
${hr 1}
${voffset -20}
${alignr}${exec grep "model name" /proc/cpuinfo | sed q | sed -r 's/[(R/TM)]+//g' | cut -d ":" -f 2 | awk '{print $0}'} <- cpu
${alignr}${goto 5}${freq 0} MHz${alignr}${cpu cpu1}% ${cpubar cpu1 10,150} <- cpu0
${alignr}${goto 5}${freq 1} MHz${alignr}${cpu cpu2}% ${cpubar cpu2 10,150} <- cpu1
${alignr}${goto 5}${freq 2} MHz${alignr}${cpu cpu3}% ${cpubar cpu3 10,150} <- cpu2
${alignr}${goto 5}${freq 3} MHz${alignr}${cpu cpu4}% ${cpubar cpu4 10,150} <- cpu3
#${alignr}${freq 0} MHz <- frequency
${alignr}${processes} <- processes
${alignr}process       cpu    mem
${alignr}${top name 1} ${top cpu 1} ${top mem 1}
${alignr}${top name 2} ${top cpu 2} ${top mem 2}
${alignr}${top name 3} ${top cpu 3} ${top mem 3}
${alignr}${top name 4} ${top cpu 4} ${top mem 4}
${voffset -20}
${hr 1}
${voffset -20}
${alignr}${exec FAB_GPU=$(lspci -v | grep "VGA compatible controller" | awk '{print $5,$7,$8,$9,$10,$11}' ) ; echo $FAB_GPU} <- gpu
${alignr}${exec FAB_GPU=$(lspci -v | grep "3D controller" | awk '{print $4,$6}' ) ; echo $FAB_GPU} ${exec MOD_GPU=$(lspci -v | grep "3D controller" | awk '{print $7,$8}' ); echo $MOD_GPU} <- gpu
${voffset -20}
${hr 1}
${voffset -20}
${alignr}${addr enp4s0f1} <- wired ip
${alignr}${upspeed enp4s0f1} / ${totalup enp4s0f1} <- up
${alignr}${upspeedgraph enp4s0f1 10,150 FFFAFA 000000 -t}
${alignr}${downspeed enp4s0f1} / ${totaldown enp4s0f1} <- down
${alignr}${downspeedgraph enp4s0f1 10,150 FFFAFA 000000 -t}
${voffset -20}
${hr 1}
${voffset -20}
${alignr}${addr wlp3s0} <- wireless ip
${alignr}${upspeed wlp3s0} / ${totalup wlp3s0} <- up
${alignr}${upspeedgraph wlp3s0 10,150 FFFAFA 000000 -t}
${alignr}${downspeed wlp3s0} / ${totaldown wlp3s0} <- down
${alignr}${downspeedgraph wlp3s0 10,150 FFFAFA 000000 -t}
${voffset -20}
${hr 1}
${voffset -20}
${alignr}${fs_used /}/${fs_size /} (${fs_free_perc /}%) <- storage (free%)
${alignr}${fs_bar 10,150 /}
${alignr}${diskio_read} <- read io
${alignr}${diskiograph_read  10,150 FFFAFA FFFAFA 750}
${alignr}${diskio_write} <- write io
${alignr}${diskiograph_write 10,150 FFFAFA FFFAFA 750}
${voffset -20}
${hr 1}
${voffset -20}
${alignr}${execi 3 CMUS_ALBUM=$(cmus-remote -Q 2>/dev/null | grep 'album ' | cut -d " " -f 3-) ; echo $CMUS_ALBUM} <- album
${alignr}${execi 3 CMUS_ARTIST=$(cmus-remote -Q 2>/dev/null | grep 'albumartist ' | cut -d " " -f 3-) ; echo $CMUS_ARTIST} <- artist
${alignr}${execi 3 CMUS_TITLE=$(cmus-remote -Q 2>/dev/null | grep title | cut -d " " -f 3-) ; echo $CMUS_TITLE} <- title
]];
